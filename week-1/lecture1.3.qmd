---
title: "lecture1.3"
format: html
date: 2024-01-08
---

## ggplot review


### Load packages
```{r}
library(tidyverse)
library(palmerpenguins)
```

### Tidy data
```{r}
# untidy data ----
# untidy bc each row represents multiple observations
# here you have 3 numerical columns it's hard to plot with just x,y axis
# each observation is a column when it should be a row (station #)

temp_data_wide <- tribble(
  ~date, ~station1, ~station2,  ~station3,
  "2023-10-01", 30.1, 29.8,  31.2,
  "2023-11-01", 28.6, 29.1,  33.4,
  "2023-12-01", 29.9, 28.5,  32.3
)

# make tidy ----
temp_data_long <- temp_data_wide %>% 
  #any column name that starts with station will be included in the pivot
  pivot_longer(cols = starts_with("station"), 
               # column names we want to create
               names_to = "station_id", 
               # column our values were stuffed into
               values_to = "temp_c")

```


### Palmer penguins example

```{r}
# Initial analysis
View(penguins)
# give us information about dataset
str(penguins)
```
### Plot 1
```{r}
# na.omit to omit NA values
# Mapping color globally
ggplot(na.omit(penguins), 
       mapping = aes(x = bill_length_mm,
                     y = bill_depth_mm,
                     color = species)) +
  geom_point() +
  # linear model line: we get one for each species
  geom_smooth(method = "lm")


# Mapping color locally
ggplot(na.omit(penguins), 
       mapping = aes(x = bill_length_mm,
                     y = bill_depth_mm)) +
  geom_point(aes(color = species)) +
  # best fit line across all the datasets
  geom_smooth(method = "lm") + 
  scale_color_manual(values = c("darkorange","purple","cyan4"))

# piping into a
# penguins %>%
# ggplot(aes(x = bill_length_mm,
#                   y = bill_depth_mm))



ggplot(na.omit(penguins), aes(x = body_mass_g,
                     y = flipper_length_mm,
                     color = body_mass_g)) +
  geom_point() +
  scale_color_gradient(low = "#123488", high = "#F7DD4C")
```
### Plot 2

```{r}
ggplot(penguins, aes(x = species)) +
  geom_bar() 

penguins_summary <- penguins %>% 
  count(species)

ggplot(penguins_summary, aes(x = species, y = n)) +
  geom_bar(stat = "identity")

# geom_col is what you would rather do
# geom_bar overide a function rcrcrdcrcdrdrdrcdrdcrcdrcd


```

override stat mapping
```{r}
# represeted as a proportion
ggplot(penguins, aes(x = species, y = after_stat(prop), 
                     group = 1)) +
  geom_bar() 



```
position adjustments
```{r}
# here we use fill bc its a big area
# color is for when it is a small point or line
ggplot(penguins,aes(x = species, fill = island)) +
  geom_bar(position = position_dodge2(preserve = "single")) 
```
```{r}
## coord system
# change how the axis is arranged
ggplot(penguins, aes(x=species)) +
  geom_bar() +
  coord_flip() +
  theme_classic() +
  theme(axis.title = element_text(size = 17, color = "purple")) # use to update everything

ggplot(penguins, aes(x=species)) +
  geom_bar() +
  coord_polar()

```

